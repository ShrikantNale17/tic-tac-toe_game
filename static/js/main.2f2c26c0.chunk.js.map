{"version":3,"sources":["Components/Box.js","Components/Board.js","Components/Stats.js","Components/GameBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","onclick","winner","styles","color","value","textShadow","fontFamily","className","id","onClick","style","onMouseOver","document","getElementById","innerText","player","onMouseOut","Board","useState","Array","fill","boxes","setBoxes","move","setMove","setWinner","setPlayer","setMoveToBoxes","position","useEffect","i","getResult","console","log","every","element","prevmoves","includes","moveElements","map","index","boxElements","box","moveIndex","indexOf","length","slice","items","item","setBoxValue","Stats","result","reload","GameBoard","setResult","count","setCount","gameResult","prev","window","location","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f2c26c0.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Box(props) {\n    // console.log(props.winner)\n    const onclick = props.winner ? null : props.onclick\n\n    function addHoverEffect() {\n        if (props.value === null && !props.winner) {\n            document.getElementById(props.id).innerText = props.player\n            document.getElementById(props.id).style.color = \"grey\"\n\n        }\n\n        // return document.getElementByClassName(\"box\").innerText = `${props.player}`\n    }\n\n    function removeHoverEffect() {\n\n        document.getElementById(props.id).innerText = props.value\n        document.getElementById(props.id).style.color = props.value === \"X\" ? \"red\" : \"green\"\n\n    }\n\n    const styles = {\n        color: props.value === \"X\" ? \"red\" : \"green\",\n        textShadow: \"2px 2px 15px #000000\",\n        fontFamily: \"serif\"\n    }\n    return (\n        <div className='box' id={props.id} onClick={onclick} style={styles} onMouseOver={addHoverEffect} onMouseOut={removeHoverEffect} >\n            {props.value}\n        </div>\n    )\n}\n\nexport default Box\n","import React, { useState, useEffect } from 'react'\nimport Box from './Box'\n\nfunction Board(props) {\n\n    const [boxes, setBoxes] = useState(Array(9).fill(null))\n    const [move, setMove] = useState([])\n    const [winner, setWinner] = useState(false)\n    const [player, setPlayer] = useState(\"X\")\n\n    useEffect(() => {\n        const possibilities = [\n            [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]\n        ]\n\n        for (let i of possibilities) {\n            // console.log(\"inside for loop\")\n            if (boxes[i[0]] === \"X\" && boxes[i[1]] === \"X\" && boxes[i[2]] === \"X\") {\n                setWinner(true)\n                props.getResult(player, true)\n                console.log(\"inside X\")\n            } else if (boxes[i[0]] === \"O\" && boxes[i[1]] === \"O\" && boxes[i[2]] === \"O\") {\n                setWinner(true)\n                props.getResult(player, true)\n                console.log(\"inside O\")\n            } else {\n                if (!winner && boxes.every(element => element !== null)) {\n                    console.log(\"Game Drawn in for\")\n                    props.getResult(player, false)\n                }\n            }\n        }\n\n    }, [player, winner])\n\n\n    useEffect(() => {\n        setMove(prevmoves => prevmoves.includes(boxes) ? prevmoves : [...prevmoves, boxes])\n    }, [boxes])\n\n\n    function setMoveToBoxes(position) {\n        setBoxes(move[position])\n        setPlayer(position % 2 === 0 ? \"X\" : \"O\")\n    }\n\n/* \n    function sliceMoves(position) {\n        setMove(prevmoves => prevmoves.slice(0, position+1))\n    } */\n\n\n    function setBoxValue(position) {\n        // setWinner(false)\n        const moveIndex = move.indexOf(boxes)\n        console.log(\"slicerupto=\"+moveIndex)\n        console.log(move)\n        console.log(\"movelength=\" + move.length)\n        if (boxes[position] === null) {\n            if (move.includes(boxes)) {\n                setWinner(false)      \n                setMove(prevmoves => prevmoves.slice(0, moveIndex+1))\n                setPlayer((moveIndex) % 2 === 0 ? \"X\" : \"O\")\n            }\n            setBoxes(items => {\n                return items.map((item, index) => position === index ? player : item)\n            }, console.log(\"boxes = \" + boxes))\n            setPlayer(move.length % 2 === 0 ? \"X\" : \"O\")\n        }\n        console.log(move)\n    }\n\n\n    const moveElements = move.map((move, index) =>\n        index === 0 ?\n            <button onClick={() => setMoveToBoxes(index)} key={index}>Go to game start</button> :\n            <button onClick={() => setMoveToBoxes(index)} key={index}>Go to move #{index}</button>\n    )\n\n\n    const boxElements = boxes.map(\n        (box, index) => <Box\n            key={index}\n            id={index}\n            value={box}\n            player={player}\n            winner={winner}\n            onclick={() => setBoxValue(index)}\n        />)\n\n\n    return (\n        <>\n            <div className='boxes'>\n                {boxElements}\n            </div>\n            <div>Next Player : {player}</div>\n            {moveElements}\n        </>\n    )\n}\n\nexport default Board\n","import React from 'react'\n\nfunction Stats(props) {\n    return (\n        <div className='result'>\n            <h2>\n                {props.result}\n            </h2>\n            <button onClick={props.reload}>New Game</button>\n        </div>\n    )\n}\n\nexport default Stats\n","import React, { useState } from 'react'\nimport Board from './Board'\nimport Stats from './Stats'\n// import Confetti from 'confetti'\n\nfunction GameBoard() {\n\n    const [result, setResult] = useState(\"\")\n    // const [winner, setWinner] = useState(false)\n    const [count , setCount] = useState(1)\n\n    function Result(player, gameResult) {\n        if (gameResult === true) {\n            player = player === \"X\" ? \"O\" : \"X\"\n            setResult(`Player  '${player}'  is Winner !!!`)\n            setCount(prev => prev+1)\n            // setWinner(true)\n        } else if (gameResult === false) {\n            setResult(`Game drawn !!!`)\n        }\n        console.log(count)\n\n    }\n\n    const reload = () => window.location.reload()\n    return (\n        <>\n            <Board\n                getResult={Result}\n                // winner={winner}\n            />\n            {result &&\n\n                <Stats\n                    result={result}\n                    reload={reload}\n                />\n            }\n        </>\n    )\n}\n\nexport default GameBoard\n","import GameBoard from './Components/GameBoard'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameBoard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}